
TODO:
	Make the preset keybindings modifiable at startup.

	Add a command to start up a new shell in a canvas where the shell is dead.

	Determine if colors should be saved with save/restore cursor and implement
	accordingly.

	In full-screen mode, make hjkl scroll the pty.

	Perhaps -1v should make the focused canvas the root and keep
	the layout below it instead of making it single screen.  Perhaps
	0v should attempt to layout all windows at one line each.

	Copy-mode, with stack of registers and ability to edit.
	Or, maybe just have a binding (s) that dumps the current content
	of the scrollback region to a file like ~/.smtx-pid-timestamp
	Perhaps use (e) to edit the file (eg, spawn $EDITOR), then (p)
	to paste it.

	List all windows with titles, with ability to navigate.

	Figure out initialization.  Maybe just use a "source" command to read
	from a file.  One could specify a fifo and inject it into the main
	processing loop so the fifo gets selected in the main loop allowing
	one to send arbitrary keystrokes.  Clearly, there are security issues.

	Make it possible for windows to overlap.

	Dump select() and use libev or libevent

BUGS:
	Syntax highlighting doesn't work in vim.

	This is dog slow on macos.  top regularly reports 100% cpu.  Should
	stop using select and switch to kqueue.  Probably not worth the
	effort to use libevent or libev.

	Need to handle memory allocation errors more thoroughly.

	Right arrow (in control mode) currently splits the screen.  This regression was
	introduced in 8805e2acfba83d77f3e0768f302336a235e7fb2e and is related to
	timeout/nodelay.  Need to track down what's going on.

	Make tput rep work.  eg, tput rep w 5 should write 5 'w' to term,
	but the parameters do not seem to be getting sent properly.  We get
	argc == 1 and argv[0] == 5 - 1, but the w is chomped.  Note that this
	is the only terminfo entry that uses %c, and I suspect there is a bug
	in vtparser

	When a pty appears in two windows, p->ws.ws_row gets set to the number
	of rows in the extent of the canvas highest up the tree.  I believe the
	desired behavior is that ws.ws_row be set to the number of rows in the
	extent of the largest canvas.  Smaller canvasses will see the top rows
	of the pty dissappear off the top, but since the small canvasses are intended
	to be smaller views, I think that is acceptable.

	Figure out why I am getting an extra line at the bottom of screen in
	termux.  Note this happens outside of smtx, so it is not our bug to
	fix, but may be a terminfo issue.  It needs to be understood.

	As of 61c41fe0f1dd73829315c959b69cf44df2af102f, the test suite hangs
	on macos.  Note that all the tests in esctest.py also timeout.  Perhaps
	this is tickling a macos bug similar to that mentioned in
	https://daniel.haxx.se/blog/2016/10/11/poll-on-mac-10-12-is-broken/,
	but probably not.

	test_ich consistently fails on macos.  This seems to
	be an issue with terminfo.  On macos:
	$ infocmp $TERM | grep '\<dl\>'
	        dl=\E[%p1%dM, dl1=\E[M, ech=\E[%p1%dX, ed=\E[J, el=\E[K,
		$ tput dl 5 | xxd
		00000000: 1b5b 4d                                  .[M
	but on debian:
	$ infocmp $TERM | grep '\<dl\>'
	        dl=\E[%p1%dM, dl1=\E[M, ech=\E[%p1%dX, ed=\E[J, el=\E[K,
		$ tput dl 5 | xxd
		00000000: 1b5b 354d                                .[5M
	tput is not passing the parameter, so test ich on macos only deletes
	one line.

	cursor visibility is still a problem.  The whole fix_cursor() crap
	needs to be redone.  At the moment, curs_set is getting called
	with show == 0 when in command mode, but the cursor is still visible.
	curs_set is not returning ERR.  This is probably me abusing ncurses, or
	not understanding it, or ... something.

	Title bars are wonky with zero height canvas.

MAYBE TODO:

	Make it easy to swap bindings.  eg, so that hjkl could be used for
	scrolling in non-full screen mode.  Maybe have labelled bindings,
	so perhaps 'a or 'b would select binding a or b.  Would be simpler
	to use numbers, so 1B or 2B could select bindings 1 or 2.  It seems
	hjkl would be better for scrolling than <> and fb

	Register signal handlers for TERM and HUP.  Need to ensure
	that endwin is called.

	Configure bindings from a startup file or ?
	Multi-key bindings (?)
	Pass master fd of a pty through a socket.

	Possibly add character in title bar to indicate mode.  Need to make
	title bar more functional in general, so this thought should probably
	be consumed by that.  Probably want to be able to send arbitrary
	format strings in through an escape sequence. Note that we currently
	can set the "title" of the window via an osc sequence, but that title
	is only a portion of the title bar.  Probably want the ability to control
	the format of the title bar.  Also, the title bar/row should probably
	be a subwindow rather than just consuming one line of the main window.
	All the '-1' in the code get confusing.

	Make it possible for windows to overlap.

	Implement method to save the current layout into a register.
